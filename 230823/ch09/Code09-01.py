
# 정적 크롤링 : 특정의 사이트의 내용(요소)을 가져오기.

# 법적으로 : 판례 사례) 여기 어때 같은 경우 무죄,
# 침입이라는 객관적인 증거가 안나와서,
# 만약
# 정보 수집을 하는데 이게 침입으로 되버리면 법적으로 문제가됨.

# 수집시, 쇼핑몰 같은 경우, 같 회사마다 제품의 카테고리, 수량, 가격
# 가격이 제일 민감함. 그래서, 보통의 대기업에서는
# 따로 기술을 사용해서, 특정태그를 보호를 함.
# 스크래핑을 못하게, 예) 쿠팡에서 이런 기술을 사용.

# 스크래핑을 할 사이트 정할 때, 영리 목적이 아니고, 누구나 자료를
# 봤을 때, 크게 상관 없는 부분,
# 예) 뉴스 라든지, 책 정보, .. 영화정보라든지,

# ( 동적 크롤링: 셀레니움(많이 사용, 크롬),
# 외부 API(네이버)를 이용해서 수집)
# 스마트 스토어 , 키워드

# 기본적인 태그 요소를 이용해서,
# 자료 수집.
# 난이도 중, 하, -> 가져올 요소의 파악하는데 시간이 걸림.
# 기본적인 HTML 요소이해, DB(MySQL 이해도), 파이썬의 기본적이해도.

import urllib.request

nateUrl = "https://www.nate.com"
# urlopen 해당 사이트 주소의 html 관련 태그를 담는 임시 인스턴스(메모리)
htmlObject = urllib.request.urlopen(nateUrl)
# htmlObject : 네이트 주소의 관련 태그들이 다 담겨져 있고,
# html , 정제되지 않음. 정리가 덜 됨.
# 우리는 이렇게 사용하지 않음.
#  bs4 모듈을 이용해서, 우리 보기 좋게(가독성좋게) 정리 해주는
# 모듈을 이용해서 작업을 합니다.
html = htmlObject.read()

print(html)
